// <auto-generated />
using System;
using Calculator.Shared.EntityFramework.Configs;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Calculator.Shared.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240127190459_FixAMistake-AddCalculatedTaxEntity")]
    partial class FixAMistakeAddCalculatedTaxEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Calculator.Shared.EntityFramework.Entities.TaxEntities.CalculatedTax", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountOfDay")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MonetaryUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CalculatedTax");
                });

            modelBuilder.Entity("Calculator.Shared.EntityFramework.Entities.TaxEntities.TaxRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MonetaryUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TaxAmount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TaxRule");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Gothenburg",
                            Country = "Sweden",
                            CreatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3574),
                            EndTime = new DateTime(2013, 1, 10, 6, 29, 0, 0, DateTimeKind.Unspecified),
                            MonetaryUnit = "SEK",
                            StartTime = new DateTime(2013, 1, 10, 6, 0, 0, 0, DateTimeKind.Unspecified),
                            TaxAmount = 8m,
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3590)
                        },
                        new
                        {
                            Id = 2,
                            City = "Gothenburg",
                            Country = "Sweden",
                            CreatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3599),
                            EndTime = new DateTime(2013, 1, 10, 6, 59, 0, 0, DateTimeKind.Unspecified),
                            MonetaryUnit = "SEK",
                            StartTime = new DateTime(2013, 1, 10, 6, 30, 0, 0, DateTimeKind.Unspecified),
                            TaxAmount = 13m,
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3600)
                        },
                        new
                        {
                            Id = 3,
                            City = "Gothenburg",
                            Country = "Sweden",
                            CreatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3703),
                            EndTime = new DateTime(2013, 1, 10, 7, 59, 0, 0, DateTimeKind.Unspecified),
                            MonetaryUnit = "SEK",
                            StartTime = new DateTime(2013, 1, 10, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            TaxAmount = 18m,
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3705)
                        },
                        new
                        {
                            Id = 4,
                            City = "Gothenburg",
                            Country = "Sweden",
                            CreatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3709),
                            EndTime = new DateTime(2013, 1, 10, 8, 29, 0, 0, DateTimeKind.Unspecified),
                            MonetaryUnit = "SEK",
                            StartTime = new DateTime(2013, 1, 10, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            TaxAmount = 13m,
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3710)
                        },
                        new
                        {
                            Id = 5,
                            City = "Gothenburg",
                            Country = "Sweden",
                            CreatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3715),
                            EndTime = new DateTime(2013, 1, 10, 14, 59, 0, 0, DateTimeKind.Unspecified),
                            MonetaryUnit = "SEK",
                            StartTime = new DateTime(2013, 1, 10, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            TaxAmount = 8m,
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3716)
                        },
                        new
                        {
                            Id = 6,
                            City = "Gothenburg",
                            Country = "Sweden",
                            CreatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3724),
                            EndTime = new DateTime(2013, 1, 10, 15, 29, 0, 0, DateTimeKind.Unspecified),
                            MonetaryUnit = "SEK",
                            StartTime = new DateTime(2013, 1, 10, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TaxAmount = 13m,
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3725)
                        },
                        new
                        {
                            Id = 7,
                            City = "Gothenburg",
                            Country = "Sweden",
                            CreatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3729),
                            EndTime = new DateTime(2013, 1, 10, 16, 59, 0, 0, DateTimeKind.Unspecified),
                            MonetaryUnit = "SEK",
                            StartTime = new DateTime(2013, 1, 10, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            TaxAmount = 18m,
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3731)
                        },
                        new
                        {
                            Id = 8,
                            City = "Gothenburg",
                            Country = "Sweden",
                            CreatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3735),
                            EndTime = new DateTime(2013, 1, 10, 17, 59, 0, 0, DateTimeKind.Unspecified),
                            MonetaryUnit = "SEK",
                            StartTime = new DateTime(2013, 1, 10, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TaxAmount = 13m,
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3736)
                        },
                        new
                        {
                            Id = 9,
                            City = "Gothenburg",
                            Country = "Sweden",
                            CreatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3740),
                            EndTime = new DateTime(2013, 1, 10, 18, 29, 0, 0, DateTimeKind.Unspecified),
                            MonetaryUnit = "SEK",
                            StartTime = new DateTime(2013, 1, 10, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            TaxAmount = 8m,
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3741)
                        },
                        new
                        {
                            Id = 10,
                            City = "Gothenburg",
                            Country = "Sweden",
                            CreatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3747),
                            EndTime = new DateTime(2013, 1, 10, 5, 59, 0, 0, DateTimeKind.Unspecified),
                            MonetaryUnit = "SEK",
                            StartTime = new DateTime(2013, 1, 10, 18, 30, 0, 0, DateTimeKind.Unspecified),
                            TaxAmount = 0m,
                            UpdatedAt = new DateTime(2024, 1, 27, 22, 34, 57, 730, DateTimeKind.Local).AddTicks(3748)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
